package ru.job4j.polymorphism;

/**
 * Интерфейс {@code Vehicle} описывает поведение управляемого транспортного средства.
 *
 * <p>Наследует интерфейс {@link Fuel} и дополняет его методами управления движением:
 * ускорением, торможением, рулевым управлением, переключением передач, а также зарядкой аккумулятора.</p>
 *
 * <p>Может быть реализован различными типами транспорта: легковыми и спортивными автомобилями,
 * мотоциклами, автобусами, электросамокатами и др.</p>
 *
 * <p><b>Пример использования:</b></p>
 * <pre>{@code
 * Vehicle car = new TownCar();
 * car.accelerate();
 * car.brake();
 * car.steer();
 * car.changeGear();
 * car.chargeBattery();
 * }</pre>
 *
 * <p><b>Пример вывода:</b></p>
 * <pre>{@code
 * Машина ускоряется.
 * Машина тормозит.
 * Машина поворачивает.
 * Передача переключена.
 * Аккумулятор под капотом. Зарядить.
 * }</pre>
 *
 * @author Maksim Merkulov
 * @version 1.2
 */
public interface Vehicle extends Fuel {

    /**
     * Количество колес по умолчанию у транспортного средства.
     */
    int WHEELS = 4;

    /**
     * Ускоряет транспортное средство.
     *
     * <p>Увеличивает скорость в зависимости от типа транспорта.</p>
     */
    void accelerate();

    /**
     * Замедляет или останавливает транспортное средство.
     *
     * <p>Может активировать тормозную систему или рекуперацию (для электромобилей).</p>
     */
    void brake();

    /**
     * Управляет направлением движения.
     *
     * <p>Обычно реализуется через рулевое управление или поворот осей.</p>
     */
    void steer();

    /**
     * Переключает передачи.
     *
     * <p>Поведение зависит от трансмиссии: механическая, автоматическая или электронная.</p>
     */
    void changeGear();

    /**
     * Статический метод вывода формулы аэродинамического сопротивления.
     *
     * <p>Используется для получения базовой справочной информации о сопротивлении воздуха
     * при движении транспорта.</p>
     */
    static void getDragCoefficient() {
        System.out.println("Формула расчета коэффициента аэродинамического сопротивления автомобиля");
    }

    /**
     * Заряжает аккумулятор транспортного средства.
     *
     * <p>Метод по умолчанию. Может быть переопределен в классах,
     * реализующих {@link Vehicle}.</p>
     */
    default void chargeBattery() {
        System.out.println("Аккумулятор под капотом. Зарядить.");
    }
}
